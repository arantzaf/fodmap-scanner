version: 2.1

workflows:
    default:
        jobs:
            # - hadolint
            # - build-docker-image:
            #     requires: [hadolint]
            - deploy-cluster
                # requires: [build-react-app]
                # filters:
                #     branches:
                #         only: [main]

jobs:
    #jobs below this are build and deploy app with docker and kubernetes
    #lint dockerfile
    hadolint:
        docker:
            - image: pipelinecomponents/hadolint
        steps:
            - checkout
            - run:
                name: run hadolint
                command: hadolint Dockerfile
    # create docker image and push to docker hub
    build-docker-image:
        docker:
            - image: cimg/go:1.17
        steps:
            - checkout
            - setup_remote_docker:
                version: 20.10.14
                docker_layer_caching: true
            - run:
                name: build and push Docker image
                command: |
                    docker build . -t floresarantza/fodmap-react-app:${CIRCLE_WORKFLOW_ID:0:4}
                    docker login -u $DOCKER_LOGIN -p $DOCKER_PWD
                    docker push floresarantza/fodmap-react-app:${CIRCLE_WORKFLOW_ID:0:4}
    # deploy app to cluster
    deploy-cluster:
        docker:
            - image: python:3.10-alpine3.17
        steps:
            - checkout
            - run:
                name: install ansible
                command: |
                    apk add --update ansible
            - run:
                name: install command dependencies
                command: |
                    pip3 install --upgrade pip
                    pip3 install --no-cache-dir awscli
            - run:
                name: verify installations
                command: |
                    ansible --version
                    pip --version
                    aws --version
            - run:
                name: configure EKS Cluster
                command: |
                    ansible-playbook -vv .circleci/ansible/configure-cluster.yml
            # - run:
            #     name: deploy docker image to cluster
            #     command: |
            #         ansible-playbook -vv  .circleci/ansible/deploy-image.yml
            # - run:
            #     name: deploy image to eks
            #     command: |
            #         kubectl set image -n fodmapNamespace deployments/fodmap-deployment fodmap-react-app=floresarantza/fodmap-react-app:${CIRCLE_WORKFLOW_ID:0:4}
                    
    #jobs below this are app build and deploy in AWS infrastructure (s3 bucket)
    #build app node
    build-npm-run:
        docker:
            - image: cimg/node:13.8.0
        steps:
            - checkout
            - restore_cache:
                keys: [frontend-build]
            - run:
                name: build react frontend
                command: |
                    cd react-app
                    npm install
                    npm run build
            - save_cache:
                paths: [react-app]
                key: frontend-build

    # deploy s3 bucket for app
    deploy-infrastructure:
        docker:
            - image: amazon/aws-cli
        steps:
            - checkout
            - run:
                name: intall tar utility for persist to workspace
                command: |
                    yum install -y tar gzip
            - run:
                name: create s3 bucket
                command: |
                    aws cloudformation deploy \
                        --template-file .circleci/files/bucket.yml \
                        --stack-name "react-bucket-${CIRCLE_WORKFLOW_ID:0:7}" \
                        --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}" \
                        --tags project=react-app
            # - run:
            #     name: create server
            #     command: |
            #         aws cloudformation deploy \
            #             --template-file .circleci/files/server.yml \
            #             --stack-name "react-server-${CIRCLE_WORKFLOW_ID:0:7}" \
            #             --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}" \
            #             --tags project=react-app
            # - run:
            #     name: add ip to ansible inventory
            #     command: |
            #         cd .circleci/ansible
            #         aws ec2 describe-instances \
            #         --filters "Name=tag:Name,Values=react-app-${CIRCLE_WORKFLOW_ID:0:7}" \
            #         --query 'Reservations[*].Instances[*].PublicIpAddress' \
            #         --output text >> inventory.txt
            - persist_to_workspace:
                root: ~/
                paths:
                    - project/.circleci/ansible/inventory.txt
    # deploy react app to s3 bucket
    deploy-react-app:
        docker:
            - image: amazon/aws-cli
        steps:
            - checkout
            - run:
                name: intall tar utility for persist to workspace
                command: |
                    yum install -y tar gzip
            - restore_cache:
                keys: [frontend-build]
            - run:
                name: Update and upgrade
                command: |
                    yum update -y
                    yum upgrade -y
            - run:
                name: Install Node and Deploy frontend objects
                command: |
                    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
                    . ~/.nvm/nvm.sh
                    nvm install 16
                    cd react-app
                    npm install
                    npm run build
                    aws s3 cp build s3://react-app-${CIRCLE_WORKFLOW_ID:0:7} --recursive